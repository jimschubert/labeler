name: Release via goreleaser

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

# Pushes a new release on tag
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    name: goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Cache go module
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod


      - name: Find Last Tag
        # tagged release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        id: last
        uses: jimschubert/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          commit-ish: 'HEAD~'
          skip-unshallow: 'true'

      - name: Find Current Tag
        # tagged release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        id: current
        uses: jimschubert/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          commit-ish: '@'
          skip-unshallow: 'true'

      - name: Create Changelog
        # tagged release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        id: changelog
        uses: jimschubert/beast-changelog-action@v1
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CONFIG_LOCATION: .github/changelog.yml
          FROM: ${{steps.last.outputs.tag}}
          TO: ${{steps.current.outputs.tag}}
          OUTPUT: .github/CHANGELOG.md

      - name: View Changelog
        # tagged release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: cat .github/CHANGELOG.md

      - name: Check goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check

      - name: Execute goreleaser
        uses: goreleaser/goreleaser-action@v6
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          args: release --clean --release-notes .github/CHANGELOG.md
